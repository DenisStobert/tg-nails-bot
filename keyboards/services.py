import aiosqlite
from typing import Set, Tuple
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import DB_PATH


async def render_services_keyboard(selected: Set[int]) -> Tuple[str, InlineKeyboardMarkup, int, int]:
    """–†–µ–Ω–¥–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏
    
    Returns:
        text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        keyboard: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        total_price: –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
        total_minutes: –û–±—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
    """
    async with aiosqlite.connect(DB_PATH) as db:
        cur = await db.execute("SELECT id, name, price, duration_minutes FROM services ORDER BY id")
        services = await cur.fetchall()

    kb_rows = []
    total_price = 0
    total_minutes = 0
    
    for sid, name, price, duration in services:
        checked = sid in selected
        prefix = "‚òëÔ∏è" if checked else "‚ñ´Ô∏è"
        
        if checked:
            total_price += price
            total_minutes += (duration or 60)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        duration_str = f"{duration}–º–∏–Ω" if duration else "60–º–∏–Ω"
        
        kb_rows.append([
            InlineKeyboardButton(
                text=f"{prefix} {name} ({price}‚ÇΩ, {duration_str})",
                callback_data=f"toggle:{sid}"
            )
        ])
    
    kb_rows.append([
        InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="services_done"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    ])
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
    hours = total_minutes // 60
    mins = total_minutes % 60
    time_str = ""
    if hours > 0:
        time_str += f"{hours}—á "
    if mins > 0:
        time_str += f"{mins}–º–∏–Ω"
    if not time_str:
        time_str = "0–º–∏–Ω"
    
    text = (
        f"*–í—ã–±–æ—Ä —É—Å–ª—É–≥*\n\n"
        f"üí∞ –°—É–º–º–∞: *{total_price} ‚ÇΩ*\n"
        f"‚è± –í—Ä–µ–º—è: *{time_str.strip()}*\n\n"
        f"–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–µ —É—Å–ª—É–≥–∏:"
    )
    
    return text, InlineKeyboardMarkup(inline_keyboard=kb_rows), total_price, total_minutes