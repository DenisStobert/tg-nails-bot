import asyncio
import aiocron
import logging

from aiogram import Bot, Dispatcher

from config import BOT_TOKEN
from database import db_init
from handlers import register_handlers
from handlers.reminders import remind_24h_before, remind_12h_before, remind_1h_before

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

bot = Bot(BOT_TOKEN)
dp = Dispatcher()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await db_init()
    logging.info("‚úÖ Database initialized")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    register_handlers(dp)
    logging.info("‚úÖ Handlers registered")
    
    # –ó–∞–ø—É—Å–∫ –∫—Ä–æ–Ω-–∑–∞–¥–∞—á –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
    # '0 */1 * * *' - –∫–∞–∂–¥—ã–π —á–∞—Å
    # '*/30 * * * *' - –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
    
    # –î–ª—è —Ç–µ—Å—Ç–∞: –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    cron_24h = aiocron.crontab('*/30 * * * *', func=lambda: remind_24h_before(bot), start=True)
    cron_12h = aiocron.crontab('*/30 * * * *', func=lambda: remind_12h_before(bot), start=True)
    cron_1h = aiocron.crontab('*/15 * * * *', func=lambda: remind_1h_before(bot), start=True)
    
    logging.info("‚è∞ Reminder crons started:")
    logging.info("   ‚Ä¢ 24h reminder - every minute (test mode)")
    logging.info("   ‚Ä¢ 12h reminder - every minute (test mode)")
    logging.info("   ‚Ä¢ 1h reminder - every minute (test mode)")
    logging.info("")
    logging.info("üìù Change cron schedule in main.py for production!")
    logging.info("   Recommended: '*/30 * * * *' (every 30 minutes)")
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logging.info("üöÄ Bot started!")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())